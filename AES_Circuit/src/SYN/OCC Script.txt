set DESIGN counter_1

sh rm -rf CTL REPORTS OUTPUT_*
 
   if {![file exist ./SPF] } {
  sh mkdir -p ./SPF
  }
  if {![file exist ./CTL]} {
  sh mkdir -p ./CTL
  }
  if {![file exist ./REPORTS]} {
  sh mkdir -p ./REPORTS
  }

  if {![file exist ./OUTPUT_DATA]} {
  sh mkdir -p ./OUTPUT_DATA
  }


#set  SCAN_DIR  pwd
#set  SPF  $pwd/SPF
#set  CTL  $pwd/CTL
#set  REPORTS  $pwd/REPORTS
#set  LOGS  $pwd/LOGS
#set  OUTPUT_DATA_DATA  $pwd/OUTPUT_DATA_DATA

#return

read_file -rtl -format verilog { ../sim/counter.v }

analyze -library WORK -format verilog { ../sim/counter.v}

#read_verilog ../sim/counter.v 


current_design ${DESIGN} 

###timeing constrains 

create_clock clk -period 5 -waveform {0 2.5}
create_clock scan_clk -period 50 -waveform {20 30}
#set_input_delay -max 1.35 -clock clk { reset }
#set_input_delay -max 1.5 -clock clk OUT
#set_output_delay -max 1.5 -clock clk TEST_SO

##end timeing constrain

check_design
#extract_physical_constraints def_file_name
set_app_var compile_seqmap_disable_qn_pin_connections true
#return
# Map and optimize the design 
compile -scan


set_compile_directives -local_optimization true
# Analyze and debug the design
report_timing > REPORTS/timing.rpt

write_file -format ddc -hierarchy -output OUTPUT_DATA/${DESIGN}_netlist_pre_scan.ddc
write_file -format verilog -hierarchy -output OUTPUT_DATA/${DESIGN}_netlist_pre_scan.v
write_sdf OUTPUT_DATA/${DESIGN}_netlist_pre_scan.sdf
#write_parasitics -output parasitics_file_name
#write_sdc sdc_file_name

#link

#return

## DFT PORTS DEFINE
#

create_port TEST_EN -dir IN
create_port scan_clk -dir IN
create_port SCAN_MODE -dir IN
create_port pll_bypass_1 -dir IN

#for {set i 0} {$i < 5 } {incr i} { create_port TEST_SI[$i] -dir IN  }
#for {set i 0} {$i < 5 } {incr i} { create_port TEST_SO[$i] -dir OUT }


set_dft_signal -view spec -type TestMode -port SCAN_MODE -active_state 1  -test_mode all
set_dft_signal -view spec -type ScanEnable  -port TEST_SE -test_mode all

for {set i 0} {$i < 5 } {incr i} { set_dft_signal -view spec -type ScanDataIn -port TEST_SI[$i] -test_mode all_dft }
for {set i 0} {$i < 5 } {incr i} { set_dft_signal -view spec -type ScanDataOut -port TEST_SO[$i] -test_mode all_dft }

set test_integration_top_occ TRUE

set_dft_signal -view existing_dft -type ScanClock -timing {20 30} -port scan_clk -test_mode all
set_dft_signal -view existing_dft -type ScanClock -timing {20 30} -port clk -test_mode all
set_dft_signal -view spec -type Reset -active_state 0 -port reset -test_mode all_dft
set_dft_signal -view spec -type pll_bypass -active_state 1 -port pll_bypass_1 -test_mode all

set_app_var test_default_delay 0
set_app_var test_default_bidir_delay 0
#set_app_var test_default_strobe 2
set_app_var test_default_period 50


##return
##set_dft_clock_controller -cell_name snps_pll_controller -design_name snps_clk_mux -cycles_per_clock 2 -chain_count 1 -pllclocks { clk } -ateclocks {scan_clk}
set_dft_configuration -clock_controller enable

set_dft_clock_controller -cell_name occ_snps_pll_controller -design snps_clk_mux -cycles_per_clock 4 -chain_count 1 -pllclocks  [get_ports clk ]  -ateclock [get_ports scan_clk] -test_mode_port [get_ports SCAN_MODE ]

#return
set_scan_configuration -chain_count 5 -max_length 400 -test_mode all_dft 
set_scan_configuration -internal_clocks multi -test_mode all

# clock mixing reccomendation is to not mix edges
set_scan_configuration -clock_mixing mix_clocks_not_edges -test_mode all 

#gui_start
set_scan_configuration -insert_terminal_lockup true -test_mode all



create_test_protocol
echo "dft_drc start. Date and time: [date]"
#start_gui
dft_drc -verbose > ./REPORTS/dft_drc_pre_verbose_flow.rpt

echo "dft_drc end. Date and time: [date]"


set_dft_insertion_configuration -synthesis_optimization none -preserve_design_name true

echo "insert_dft start. Date and time: [date]"
insert_dft
echo "insert_dft end. Date and time: [date]"

write -f verilog -hier -o  ./OUTPUT_DATA/${DESIGN}_netlist_scan.v

write_scan_def -output  ./OUTPUT_DATA/${DESIGN}_netlist_scan.def

write_test_model -format ctl -o ./CTL/${DESIGN}_netlist_scan_post_dft_test_model.ctl
write_test_model -format ddc -o ./OUTPUT_DATA/${DESIGN}_scan_post_dft_test_model.ctlddc

report_area > REPORTS/report_area_post_Scan.rpt

report_dft_configuration > REPORTS/dft_configuration.tcl

#PK Disabling so that internal pin does not come in SPF
set_dft_drc_configuration -internal_pins disable
 
write_test_protocol -test_mode Internal_scan -o SPF/${DESIGN}netlist_Internal_scan.spf


# SCAN CHAIN DATA DUMP
report_scan_path -view existing_dft -chain all -test_mode Internal_scan > REPORTS/scan_chains_int.rpt
report_scan_path -view existing_dft -chain all  -test_mode ScanCompression_mode > REPORTS/scan_chains_sc.rpt

# SCAN CELL DATA DUMP
report_scan_path -view existing_dft -cell all  -test_mode Internal_scan > REPORTS/scan_cells_int.rpt
report_scan_path -view existing_dft -cell all  -test_mode ScanCompression_mode > ./REPORTS/scan_cells_sc.rpt

report_scan_configuration > ./REPORTS/top_config.rpt
report_qor > ./REPORTS/report_qor_post_insertion.rpt
report_hierarchy > ./REPORTS/report_hierarchy_post_insertion.rpt
check_design > ./REPORTS/report_check_top_design.rpt
check_scan_def > ./REPORTS/check_top_scan_def.log


